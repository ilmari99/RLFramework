import numpy as np
BLOKUS_PIECE_MAP = {
    0: [[1,1,1,1,1]],
    1 : [[1,1],
         [1,0]],
    2 : [[1,1,1,1],
         [0,0,0,1]],
    3 : [[1,1,1],
         [1,0,1]],
    4 : [[1,0,0],
         [1,0,0],
         [1,1,1]],
    5 : [[0,1,0],
         [1,1,1],
         [0,1,0]],
    6 : [[1]],
    7 : [[1,1],
         [1,1]],
    8 : [[1,1,1,1]],
    9 : [[0,0,1],
         [0,1,1],
         [1,1,0]],
    10 : [[0,1],
          [0,1],
          [1,1]],
    11 : [[1,1,1,1],
          [0,0,1,0]],
    12 : [[0,0,1],
          [1,1,1],
          [1,0,0]],
    13 : [[1,1,0],
          [1,1,1]],
    14 : [[1,0,0],
          [1,1,1],
          [1,0,0]],
    15 : [[1,1,0],
          [0,1,1],
          [0,1,0]],
    16 : [[1,1]],
    17 : [[0,1],
          [1,1],
          [1,0],
          [1,0]],
    18 : [[1,1,1]],
    19 : [[0,1,1],
          [1,1,0]],
    20 : [[0,1,0],
          [1,1,1]],
}
BLOKUS_PIECE_MAP = {k: np.array(v) for k, v in BLOKUS_PIECE_MAP.items()}
# Pad all pieces according to their longest dimension
for k, v in BLOKUS_PIECE_MAP.items():
    max_dim = max(v.shape)
    pad = (max_dim - v.shape[0], max_dim - v.shape[1])
    BLOKUS_PIECE_MAP[k] = np.pad(v, ((0, pad[0]), (0, pad[1])), mode='constant', constant_values=0)
